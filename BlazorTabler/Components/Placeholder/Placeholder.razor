@inherits TablerComponentBase
@namespace BlazorTabler


@if (Type is PlaceholderTypes.Post)
{
    <div class="card placeholder-glow @CssClass" @ref="@Element" id="@Id" style="@CssStyle" @attributes="@AdditionalAttributes">
        <div class="ratio ratio-21x9 card-img-top placeholder"></div>
        <div class="card-body">
            <div class="placeholder col-9 mb-3"></div>
            <div class="placeholder placeholder-xs col-10"></div>
            <div class="placeholder placeholder-xs col-11"></div>
            <div class="mt-3">
                <a href="#" tabindex="-1" class="btn btn-primary disabled placeholder col-4" aria-hidden="true"></a>
            </div>
        </div>
    </div>
}
else if (Type is PlaceholderTypes.CircleItem)
{
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-auto">
                    <div class="avatar avatar-rounded placeholder"></div>
                </div>
                <div class="col">
                    <div class="placeholder placeholder-xs col-9"></div>
                    <div class="placeholder placeholder-xs col-7"></div>
                </div>
            </div>
        </div>
    </div>
}
else if (Type is PlaceholderTypes.CircleItemCenter)
{
    <div class="card">
        <div class="card-body py-5 text-center">
            <div>
                <div class="avatar avatar-rounded avatar-lg placeholder mb-3"></div>
            </div>
            <div class="mt w-75 mx-auto">
                <div class="placeholder col-9 mb-3"></div>
                <div class="placeholder placeholder-xs col-10"></div>
            </div>
        </div>
    </div>
}
else if (Type is PlaceholderTypes.SquareItem)
{
    <div class="card">
        <div class="row g-0 align-items-center placeholder-glow">
            <div class="col-3">
                <div class="ratio ratio-1x1 card-img-start placeholder"></div>
            </div>
            <div class="col">
                <div class="card-body">
                    <div class="placeholder col-9 mb-3"></div>
                    <div class="placeholder placeholder-xs col-10"></div>
                    <div class="placeholder placeholder-xs col-11"></div>
                </div>
            </div>
        </div>
    </div>
}
else if (Type is PlaceholderTypes.Text)
{
    <div class="card">
        <div class="card-body text-end placeholder-glow">
            <div class="placeholder col-9 mb-3"></div>
            <div class="placeholder placeholder-xs col-10"></div>
            <div class="placeholder placeholder-xs col-12"></div>
            <div class="placeholder placeholder-xs col-11"></div>
            <div class="placeholder placeholder-xs col-8"></div>
            <div class="placeholder placeholder-xs col-10"></div>
        </div>
    </div>
}
else if (Type is PlaceholderTypes.CircleList)
{
    <div class="card">
        <ul class="list-group list-group-flush placeholder-glow">
            @for (int i = 0; i < ListCount; i++)
            {
                <li class="list-group-item">
                    <div class="row align-items-center">
                        <div class="col-auto">
                            <div class="avatar avatar-rounded placeholder"></div>
                        </div>
                        <div class="col-7">
                            <div class="placeholder placeholder-xs col-9"></div>
                            <div class="placeholder placeholder-xs col-7"></div>
                        </div>
                        <div class="col-2 ms-auto text-end">
                            <div class="placeholder placeholder-xs col-8"></div>
                            <div class="placeholder placeholder-xs col-10"></div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
}


@code {
    [Parameter] public PlaceholderTypes Type { get; set; } = PlaceholderTypes.Post;
    [Parameter] public int ListCount { get; set; } = 1;
}